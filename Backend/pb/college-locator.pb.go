// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0-devel
// 	protoc        v3.13.0
// source: college-locator.proto

package pb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

var File_college_locator_proto protoreflect.FileDescriptor

var file_college_locator_proto_rawDesc = []byte{
	0x0a, 0x15, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x2d, 0x6c, 0x6f, 0x63, 0x61, 0x74, 0x6f,
	0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0a, 0x69, 0x6e, 0x69, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x0d, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x32, 0x9a, 0x01, 0x0a, 0x15, 0x43, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x4c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x26, 0x0a, 0x07, 0x49, 0x6e,
	0x69, 0x74, 0x41, 0x70, 0x70, 0x12, 0x0c, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x0d, 0x2e, 0x49, 0x6e, 0x69, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x2b, 0x0a, 0x06, 0x53, 0x65, 0x61, 0x72, 0x63, 0x68, 0x12, 0x0e, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0f, 0x2e, 0x53,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x30, 0x01, 0x12,
	0x2c, 0x0a, 0x07, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x0f, 0x2e, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x10, 0x2e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x3f, 0x0a,
	0x35, 0x63, 0x6f, 0x6d, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x6c, 0x6f, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x2e, 0x63, 0x6f, 0x6c, 0x6c, 0x65, 0x67, 0x65, 0x6c, 0x6f, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x65,
	0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x50, 0x01, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var file_college_locator_proto_goTypes = []interface{}{
	(*InitRequest)(nil),     // 0: InitRequest
	(*SearchRequest)(nil),   // 1: SearchRequest
	(*DetailsRequest)(nil),  // 2: DetailsRequest
	(*InitResponse)(nil),    // 3: InitResponse
	(*SearchResponse)(nil),  // 4: SearchResponse
	(*DetailsResponse)(nil), // 5: DetailsResponse
}
var file_college_locator_proto_depIdxs = []int32{
	0, // 0: CollegeLocatorService.InitApp:input_type -> InitRequest
	1, // 1: CollegeLocatorService.Search:input_type -> SearchRequest
	2, // 2: CollegeLocatorService.Details:input_type -> DetailsRequest
	3, // 3: CollegeLocatorService.InitApp:output_type -> InitResponse
	4, // 4: CollegeLocatorService.Search:output_type -> SearchResponse
	5, // 5: CollegeLocatorService.Details:output_type -> DetailsResponse
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_college_locator_proto_init() }
func file_college_locator_proto_init() {
	if File_college_locator_proto != nil {
		return
	}
	file_search_proto_init()
	file_init_proto_init()
	file_details_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_college_locator_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   0,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_college_locator_proto_goTypes,
		DependencyIndexes: file_college_locator_proto_depIdxs,
	}.Build()
	File_college_locator_proto = out.File
	file_college_locator_proto_rawDesc = nil
	file_college_locator_proto_goTypes = nil
	file_college_locator_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// CollegeLocatorServiceClient is the client API for CollegeLocatorService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type CollegeLocatorServiceClient interface {
	InitApp(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*InitResponse, error)
	Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (CollegeLocatorService_SearchClient, error)
	Details(ctx context.Context, in *DetailsRequest, opts ...grpc.CallOption) (*DetailsResponse, error)
}

type collegeLocatorServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewCollegeLocatorServiceClient(cc grpc.ClientConnInterface) CollegeLocatorServiceClient {
	return &collegeLocatorServiceClient{cc}
}

func (c *collegeLocatorServiceClient) InitApp(ctx context.Context, in *InitRequest, opts ...grpc.CallOption) (*InitResponse, error) {
	out := new(InitResponse)
	err := c.cc.Invoke(ctx, "/CollegeLocatorService/InitApp", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *collegeLocatorServiceClient) Search(ctx context.Context, in *SearchRequest, opts ...grpc.CallOption) (CollegeLocatorService_SearchClient, error) {
	stream, err := c.cc.NewStream(ctx, &_CollegeLocatorService_serviceDesc.Streams[0], "/CollegeLocatorService/Search", opts...)
	if err != nil {
		return nil, err
	}
	x := &collegeLocatorServiceSearchClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type CollegeLocatorService_SearchClient interface {
	Recv() (*SearchResponse, error)
	grpc.ClientStream
}

type collegeLocatorServiceSearchClient struct {
	grpc.ClientStream
}

func (x *collegeLocatorServiceSearchClient) Recv() (*SearchResponse, error) {
	m := new(SearchResponse)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *collegeLocatorServiceClient) Details(ctx context.Context, in *DetailsRequest, opts ...grpc.CallOption) (*DetailsResponse, error) {
	out := new(DetailsResponse)
	err := c.cc.Invoke(ctx, "/CollegeLocatorService/Details", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// CollegeLocatorServiceServer is the server API for CollegeLocatorService service.
type CollegeLocatorServiceServer interface {
	InitApp(context.Context, *InitRequest) (*InitResponse, error)
	Search(*SearchRequest, CollegeLocatorService_SearchServer) error
	Details(context.Context, *DetailsRequest) (*DetailsResponse, error)
}

// UnimplementedCollegeLocatorServiceServer can be embedded to have forward compatible implementations.
type UnimplementedCollegeLocatorServiceServer struct {
}

func (*UnimplementedCollegeLocatorServiceServer) InitApp(context.Context, *InitRequest) (*InitResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method InitApp not implemented")
}
func (*UnimplementedCollegeLocatorServiceServer) Search(*SearchRequest, CollegeLocatorService_SearchServer) error {
	return status.Errorf(codes.Unimplemented, "method Search not implemented")
}
func (*UnimplementedCollegeLocatorServiceServer) Details(context.Context, *DetailsRequest) (*DetailsResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Details not implemented")
}

func RegisterCollegeLocatorServiceServer(s *grpc.Server, srv CollegeLocatorServiceServer) {
	s.RegisterService(&_CollegeLocatorService_serviceDesc, srv)
}

func _CollegeLocatorService_InitApp_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(InitRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollegeLocatorServiceServer).InitApp(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CollegeLocatorService/InitApp",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollegeLocatorServiceServer).InitApp(ctx, req.(*InitRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _CollegeLocatorService_Search_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(SearchRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(CollegeLocatorServiceServer).Search(m, &collegeLocatorServiceSearchServer{stream})
}

type CollegeLocatorService_SearchServer interface {
	Send(*SearchResponse) error
	grpc.ServerStream
}

type collegeLocatorServiceSearchServer struct {
	grpc.ServerStream
}

func (x *collegeLocatorServiceSearchServer) Send(m *SearchResponse) error {
	return x.ServerStream.SendMsg(m)
}

func _CollegeLocatorService_Details_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DetailsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(CollegeLocatorServiceServer).Details(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/CollegeLocatorService/Details",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(CollegeLocatorServiceServer).Details(ctx, req.(*DetailsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _CollegeLocatorService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "CollegeLocatorService",
	HandlerType: (*CollegeLocatorServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "InitApp",
			Handler:    _CollegeLocatorService_InitApp_Handler,
		},
		{
			MethodName: "Details",
			Handler:    _CollegeLocatorService_Details_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "Search",
			Handler:       _CollegeLocatorService_Search_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "college-locator.proto",
}
